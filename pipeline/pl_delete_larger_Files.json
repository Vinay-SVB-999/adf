{
	"name": "pl_delete_larger_Files",
	"properties": {
		"activities": [
			{
				"name": "Get Metadata_1_List of Files",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_adls_delete_Larger_Files_Get1",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "ForEach activity for iterate files",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Metadata_1_List of Files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata_1_List of Files').output.childItems",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Get Metadata 2 to get FileName and each File Size",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ds_adls_delete_Larger_Files_Get2",
									"type": "DatasetReference",
									"parameters": {
										"FileName": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"itemName",
									"size"
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							}
						},
						{
							"name": "If Condition to check Larger Files",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Get Metadata 2 to get FileName and each File Size",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@greater(activity('Get Metadata 2 to get FileName and each File Size').output.size, 1048576)",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Delete Larger Files",
										"type": "Delete",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"dataset": {
												"referenceName": "ds_adls_delete_larger_Files_delete_Activty",
												"type": "DatasetReference",
												"parameters": {
													"DelFile": {
														"value": "@activity('Get Metadata 2 to get FileName and each File Size').output.itemName",
														"type": "Expression"
													}
												}
											},
											"logStorageSettings": {
												"linkedServiceName": {
													"referenceName": "AzureDataLakeStorageGen2",
													"type": "LinkedServiceReference"
												},
												"path": "logging/deletelargerfiles"
											},
											"enableLogging": true,
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										}
									}
								]
							}
						}
					]
				}
			}
		],
		"annotations": [],
		"lastPublishTime": "2025-09-11T05:23:14Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}